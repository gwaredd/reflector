
//------------------------------------------------------------------------------
// expanded defs file


//------------------------------------------------------------------------------
// attributes macro

{{## def.attrs:p:

{{ var keys = p.decl.attrs ? Object.keys( p.decl.attrs ) : null; }}

{{? keys }}
    static Attr {{= p.name }}[ {{= keys.length }} ];
    {{~ keys : key:ki }}
    {{= p.name }}[ {{= ki }} ].Key     = "{{= key }}";
    {{= p.name }}[ {{= ki }} ].Value   = "{{= p.decl.attrs[ key ] }}";
    {{~}}
    {{? p.prefix }}{{= p.prefix }}.{{?}}Attrs       = {{= p.name }};
    {{? p.prefix }}{{= p.prefix }}.{{?}}NumAttrs    = {{= keys.length }};
{{?}}

#}}


//------------------------------------------------------------------------------
// enums

{{## def.enum:
    {{? decl.constants && decl.constants.length }}
    static Constant e[ {{= decl.constants.length }} ];
        {{~ decl.constants : e:ei }}
    e[ {{= ei }} ].Name  = "{{= e.name }}";
    e[ {{= ei }} ].Value = {{= e.value }};
    {{# def.attrs:{ decl:e, name:"e" + ei + "_attrs", prefix:"e[" + ei + "]" } }}
        {{~}}
    {{?}}
    Constants       = e;
    NumConstants    = {{= decl.constants.length }};
#}}


//------------------------------------------------------------------------------
// base classes

{{## def.inherits:
    static const TypeInfo* bases[] = { this{{~ decl.inherits : base }}, {{= base.type }}{{~}}, nullptr };
    Inherits = bases;
#}}


//------------------------------------------------------------------------------
// class fields

{{## def.fields:
{{? decl.fields && decl.fields.length }}

    //
    // class fields
    //

    static Property p[ {{= decl.fields.length }} ];
        {{~ decl.fields : f:fi }}

    // {{= fi}}. {{= f.name }}

    p[ {{=fi}} ].Name  = "{{= f.name }}";
    p[ {{=fi}} ].Info  = Type<{{= f.type }}>();
    p[ {{=fi}} ].Get   = []( void* o ) -> void* { return &reinterpret_cast<{{= decl.name }}*>(o)->{{= f.name }}; };
    {{# def.attrs:{ decl:f, name:"p" + fi + "_attrs", prefix:"p[" + fi + "]" } }}
        {{~}}
    Properties      = p;
    NumProperties   = {{= decl.fields.length }};
{{?}}
#}}



