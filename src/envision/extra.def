
////////////////////////////////////////////////////////////////////////////////
// extras ...

template<> void TypeInfoImpl< std::string >::Create()
{
    ToString = []( void* obj, char* buf, int size )
    {
        if( buf && size > 0 )
        {
            *buf = '\0';
        }

        return obj ? ((std::string*)obj)->c_str() : buf;
    };

    FromString = []( void* obj, const char* buf ) -> bool
    {
        if( obj == nullptr )
        {
            return false;
        }

        auto str = (std::string*)obj;

        if( buf )
        {
            *str = buf;
        }
        else
        {
            str->empty();
        }

        return true;
    };
}

