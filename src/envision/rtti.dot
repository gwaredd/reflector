////////////////////////////////////////////////////////////////////////////////
// Automatically generated RTTI information
// source  : {{= it.file }}
// date    : {{= it.date }}
{{# def.rtti }}
#include <vector>
#include <string>

#include "gw/gw.h"
#include "gwRTTI/gwRTTI.h"
{{~ it.data.includes : inc }}#include "{{= inc }}"
{{~}}
using namespace gw::RTTI;

{{? it.data.misc.length }}
////////////////////////////////////////////////////////////////////////////////
// common types
{{~ it.data.misc : t }}
gwRTTI_REGISTER( {{= t }} );{{~}}
{{?}}
{{~ it.data.classes : decl }}
////////////////////////////////////////////////////////////////////////////////
// {{= decl.name }}

template<> void TypeInfoImpl< {{= decl.name }} >::Create()
{{{? decl.type == 'enum' }}{{? decl.attrs && Object.keys( decl.attrs ).length }}
    //
    // attrs
    //
    {{# def.attrs:{decl:decl, name:"attrs", prefix:""} }}{{?}}
    //
    // constants
    //
    {{# def.enum }}{{??}}
    //
    // base classes
    //
    {{# def.inherits }}{{? decl.attrs && Object.keys( decl.attrs ).length }}
    //
    // class attributes
    //
    {{# def.attrs:{decl:decl, name:"attrs", prefix:""} }}{{?}}{{? decl.fields && decl.fields.length }}
    {{# def.fields }}{{?}}{{?}}
}

gwRTTI_REGISTER( {{= decl.name }} );

{{~}}
